{"version":3,"file":"dashwebsocket.min.js","mappings":"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","sources":["webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///external window \"React\"","webpack:///external window \"PropTypes\"","webpack:///./node_modules/engine.io-parser/build/esm/commons.js","webpack:///./node_modules/engine.io-parser/build/esm/encodePacket.browser.js","webpack:///./node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","webpack:///./node_modules/engine.io-parser/build/esm/decodePacket.browser.js","webpack:///./node_modules/engine.io-parser/build/esm/index.js","webpack:///./node_modules/@socket.io/component-emitter/index.mjs","webpack:///./node_modules/engine.io-client/build/esm/globalThis.browser.js","webpack:///./node_modules/engine.io-client/build/esm/util.js","webpack:///./node_modules/engine.io-client/build/esm/transport.js","webpack:///./node_modules/engine.io-client/build/esm/contrib/parseqs.js","webpack:///./node_modules/engine.io-client/build/esm/contrib/yeast.js","webpack:///./node_modules/engine.io-client/build/esm/contrib/has-cors.js","webpack:///./node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","webpack:///./node_modules/engine.io-client/build/esm/transports/polling.js","webpack:///./node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","webpack:///./node_modules/engine.io-client/build/esm/transports/websocket.js","webpack:///./node_modules/engine.io-client/build/esm/transports/index.js","webpack:///./node_modules/engine.io-client/build/esm/transports/webtransport.js","webpack:///./node_modules/engine.io-client/build/esm/contrib/parseuri.js","webpack:///./node_modules/engine.io-client/build/esm/socket.js","webpack:///./node_modules/engine.io-client/build/esm/index.js","webpack:///./node_modules/socket.io-parser/build/esm/is-binary.js","webpack:///./node_modules/socket.io-parser/build/esm/binary.js","webpack:///./node_modules/socket.io-parser/build/esm/index.js","webpack:///./node_modules/socket.io-client/build/esm/on.js","webpack:///./node_modules/socket.io-client/build/esm/socket.js","webpack:///./node_modules/socket.io-client/build/esm/contrib/backo2.js","webpack:///./node_modules/socket.io-client/build/esm/manager.js","webpack:///./node_modules/socket.io-client/build/esm/index.js","webpack:///./node_modules/socket.io-client/build/esm/url.js","webpack:///./src/lib/components/DashWebsocket.react.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","var getCurrentScript = function() {\n    var script = document.currentScript;\n    if (!script) {\n        /* Shim for IE11 and below */\n        /* Do not take into account async scripts and inline scripts */\n\n        var doc_scripts = document.getElementsByTagName('script');\n        var scripts = [];\n\n        for (var i = 0; i < doc_scripts.length; i++) {\n            scripts.push(doc_scripts[i]);\n        }\n\n        scripts = scripts.filter(function(s) { return !s.async && !s.text && !s.textContent; });\n        script = scripts.slice(-1)[0];\n    }\n\n    return script;\n};\n\nvar isLocalScript = function(script) {\n    return /\\/_dash-component-suites\\//.test(script.src);\n};\n\nObject.defineProperty(__webpack_require__, 'p', {\n    get: (function () {\n        var script = getCurrentScript();\n\n        var url = script.src.split('/').slice(0, -1).join('/') + '/';\n\n        return function() {\n            return url;\n        };\n    })()\n});\n\nif (typeof jsonpScriptSrc !== 'undefined') {\n    var __jsonpScriptSrc__ = jsonpScriptSrc;\n    jsonpScriptSrc = function(chunkId) {\n        var script = getCurrentScript();\n        var isLocal = isLocalScript(script);\n\n        var src = __jsonpScriptSrc__(chunkId);\n\n        if(!isLocal) {\n            return src;\n        }\n\n        var srcFragments = src.split('/');\n        var fileFragments = srcFragments.slice(-1)[0].split('.');\n\n        fileFragments.splice(1, 0, \"v0_0_1m1725217123\");\n        srcFragments.splice(-1, 1, fileFragments.join('.'))\n\n        return srcFragments.join('/');\n    };\n}\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"React\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"PropTypes\"];","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach((key) => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nfunction toArray(data) {\n    if (data instanceof Uint8Array) {\n        return data;\n    }\n    else if (data instanceof ArrayBuffer) {\n        return new Uint8Array(data);\n    }\n    else {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n    }\n}\nlet TEXT_ENCODER;\nexport function encodePacketToBinary(packet, callback) {\n    if (withNativeBlob && packet.data instanceof Blob) {\n        return packet.data.arrayBuffer().then(toArray).then(callback);\n    }\n    else if (withNativeArrayBuffer &&\n        (packet.data instanceof ArrayBuffer || isView(packet.data))) {\n        return callback(toArray(packet.data));\n    }\n    encodePacket(packet, false, (encoded) => {\n        if (!TEXT_ENCODER) {\n            TEXT_ENCODER = new TextEncoder();\n        }\n        callback(TEXT_ENCODER.encode(encoded));\n    });\n}\nexport { encodePacket };\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE, } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nexport const decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType),\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType),\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1),\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type],\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            if (data instanceof Blob) {\n                // from WebSocket + binaryType \"blob\"\n                return data;\n            }\n            else {\n                // from HTTP long-polling or WebTransport\n                return new Blob([data]);\n            }\n        case \"arraybuffer\":\n        default:\n            if (data instanceof ArrayBuffer) {\n                // from HTTP long-polling (base64) or WebSocket + binaryType \"arraybuffer\"\n                return data;\n            }\n            else {\n                // from WebTransport (Uint8Array)\n                return data.buffer;\n            }\n    }\n};\n","import { encodePacket, encodePacketToBinary } from \"./encodePacket.js\";\nimport { decodePacket } from \"./decodePacket.js\";\nimport { ERROR_PACKET, } from \"./commons.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, (encodedPacket) => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport function createPacketEncoderStream() {\n    // @ts-expect-error\n    return new TransformStream({\n        transform(packet, controller) {\n            encodePacketToBinary(packet, (encodedPacket) => {\n                const payloadLength = encodedPacket.length;\n                let header;\n                // inspired by the WebSocket format: https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers#decoding_payload_length\n                if (payloadLength < 126) {\n                    header = new Uint8Array(1);\n                    new DataView(header.buffer).setUint8(0, payloadLength);\n                }\n                else if (payloadLength < 65536) {\n                    header = new Uint8Array(3);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 126);\n                    view.setUint16(1, payloadLength);\n                }\n                else {\n                    header = new Uint8Array(9);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 127);\n                    view.setBigUint64(1, BigInt(payloadLength));\n                }\n                // first bit indicates whether the payload is plain text (0) or binary (1)\n                if (packet.data && typeof packet.data !== \"string\") {\n                    header[0] |= 0x80;\n                }\n                controller.enqueue(header);\n                controller.enqueue(encodedPacket);\n            });\n        },\n    });\n}\nlet TEXT_DECODER;\nfunction totalLength(chunks) {\n    return chunks.reduce((acc, chunk) => acc + chunk.length, 0);\n}\nfunction concatChunks(chunks, size) {\n    if (chunks[0].length === size) {\n        return chunks.shift();\n    }\n    const buffer = new Uint8Array(size);\n    let j = 0;\n    for (let i = 0; i < size; i++) {\n        buffer[i] = chunks[0][j++];\n        if (j === chunks[0].length) {\n            chunks.shift();\n            j = 0;\n        }\n    }\n    if (chunks.length && j < chunks[0].length) {\n        chunks[0] = chunks[0].slice(j);\n    }\n    return buffer;\n}\nexport function createPacketDecoderStream(maxPayload, binaryType) {\n    if (!TEXT_DECODER) {\n        TEXT_DECODER = new TextDecoder();\n    }\n    const chunks = [];\n    let state = 0 /* READ_HEADER */;\n    let expectedLength = -1;\n    let isBinary = false;\n    // @ts-expect-error\n    return new TransformStream({\n        transform(chunk, controller) {\n            chunks.push(chunk);\n            while (true) {\n                if (state === 0 /* READ_HEADER */) {\n                    if (totalLength(chunks) < 1) {\n                        break;\n                    }\n                    const header = concatChunks(chunks, 1);\n                    isBinary = (header[0] & 0x80) === 0x80;\n                    expectedLength = header[0] & 0x7f;\n                    if (expectedLength < 126) {\n                        state = 3 /* READ_PAYLOAD */;\n                    }\n                    else if (expectedLength === 126) {\n                        state = 1 /* READ_EXTENDED_LENGTH_16 */;\n                    }\n                    else {\n                        state = 2 /* READ_EXTENDED_LENGTH_64 */;\n                    }\n                }\n                else if (state === 1 /* READ_EXTENDED_LENGTH_16 */) {\n                    if (totalLength(chunks) < 2) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 2);\n                    expectedLength = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length).getUint16(0);\n                    state = 3 /* READ_PAYLOAD */;\n                }\n                else if (state === 2 /* READ_EXTENDED_LENGTH_64 */) {\n                    if (totalLength(chunks) < 8) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 8);\n                    const view = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length);\n                    const n = view.getUint32(0);\n                    if (n > Math.pow(2, 53 - 32) - 1) {\n                        // the maximum safe integer in JavaScript is 2^53 - 1\n                        controller.enqueue(ERROR_PACKET);\n                        break;\n                    }\n                    expectedLength = n * Math.pow(2, 32) + view.getUint32(4);\n                    state = 3 /* READ_PAYLOAD */;\n                }\n                else {\n                    if (totalLength(chunks) < expectedLength) {\n                        break;\n                    }\n                    const data = concatChunks(chunks, expectedLength);\n                    controller.enqueue(decodePacket(isBinary ? data : TEXT_DECODER.decode(data), binaryType));\n                    state = 0 /* READ_HEADER */;\n                }\n                if (expectedLength === 0 || expectedLength > maxPayload) {\n                    controller.enqueue(ERROR_PACKET);\n                    break;\n                }\n            }\n        },\n    });\n}\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload, };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nimport { encode } from \"./contrib/parseqs.js\";\nexport class TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n    createUri(schema, query = {}) {\n        return (schema +\n            \"://\" +\n            this._hostname() +\n            this._port() +\n            this.opts.path +\n            this._query(query));\n    }\n    _hostname() {\n        const hostname = this.opts.hostname;\n        return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\n    }\n    _port() {\n        if (this.opts.port &&\n            ((this.opts.secure && Number(this.opts.port !== 443)) ||\n                (!this.opts.secure && Number(this.opts.port) !== 80))) {\n            return \":\" + this.opts.port;\n        }\n        else {\n            return \"\";\n        }\n    }\n    _query(query) {\n        const encodedQuery = encode(query);\n        return encodedQuery.length ? \"?\" + encodedQuery : \"\";\n    }\n}\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\nexport function createCookieJar() { }\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { createCookieJar, XHR as XMLHttpRequest, } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false,\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n        if (this.opts.withCredentials) {\n            this.cookieJar = createCookieJar();\n        }\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        const query = this.query || {};\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, cookieJar: this.cookieJar }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    create() {\n        var _a;\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, true);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                var _a;\n                if (xhr.readyState === 3) {\n                    (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(xhr);\n                }\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { nextTick, usingBrowserWebSocket, WebSocket, } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @param {Object} opts - connection options\n     * @protected\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        const query = this.query || {};\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @private\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nimport { WT } from \"./webtransport.js\";\nexport const transports = {\n    websocket: WS,\n    webtransport: WT,\n    polling: Polling,\n};\n","import { Transport } from \"../transport.js\";\nimport { nextTick } from \"./websocket-constructor.js\";\nimport { createPacketDecoderStream, createPacketEncoderStream, } from \"engine.io-parser\";\nexport class WT extends Transport {\n    get name() {\n        return \"webtransport\";\n    }\n    doOpen() {\n        // @ts-ignore\n        if (typeof WebTransport !== \"function\") {\n            return;\n        }\n        // @ts-ignore\n        this.transport = new WebTransport(this.createUri(\"https\"), this.opts.transportOptions[this.name]);\n        this.transport.closed\n            .then(() => {\n            this.onClose();\n        })\n            .catch((err) => {\n            this.onError(\"webtransport error\", err);\n        });\n        // note: we could have used async/await, but that would require some additional polyfills\n        this.transport.ready.then(() => {\n            this.transport.createBidirectionalStream().then((stream) => {\n                const decoderStream = createPacketDecoderStream(Number.MAX_SAFE_INTEGER, this.socket.binaryType);\n                const reader = stream.readable.pipeThrough(decoderStream).getReader();\n                const encoderStream = createPacketEncoderStream();\n                encoderStream.readable.pipeTo(stream.writable);\n                this.writer = encoderStream.writable.getWriter();\n                const read = () => {\n                    reader\n                        .read()\n                        .then(({ done, value }) => {\n                        if (done) {\n                            return;\n                        }\n                        this.onPacket(value);\n                        read();\n                    })\n                        .catch((err) => {\n                    });\n                };\n                read();\n                const packet = { type: \"open\" };\n                if (this.query.sid) {\n                    packet.data = `{\"sid\":\"${this.query.sid}\"}`;\n                }\n                this.writer.write(packet).then(() => this.onOpen());\n            });\n        });\n    }\n    write(packets) {\n        this.writable = false;\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            this.writer.write(packet).then(() => {\n                if (lastPacket) {\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        var _a;\n        (_a = this.transport) === null || _a === void 0 ? void 0 : _a.close();\n    }\n}\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    if (str.length > 2000) {\n        throw \"URI too long\";\n    }\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nimport { defaultBinaryType } from \"./transports/websocket-constructor.js\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts = {}) {\n        super();\n        this.binaryType = defaultBinaryType;\n        this.writeBuffer = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\n            \"polling\",\n            \"websocket\",\n            \"webtransport\",\n        ];\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: false,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this.beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        }, this.opts.transportOptions[name]);\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", (reason) => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        if (this.upgrades.indexOf(\"webtransport\") !== -1 &&\n            name !== \"webtransport\") {\n            // favor WebTransport\n            this.setTimeoutFn(() => {\n                if (!failed) {\n                    transport.open();\n                }\n            }, 200);\n        }\n        else {\n            transport.open();\n        }\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            this.resetPingTimeout();\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport const protocol = Socket.protocol;\nexport { Transport, TransportError } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\nexport { parse } from \"./contrib/parseuri.js\";\nexport { nextTick } from \"./transports/websocket-constructor.js\";\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * These strings must not be used as event names, as they have a special meaning.\n */\nconst RESERVED_EVENTS = [\n    \"connect\",\n    \"connect_error\",\n    \"disconnect\",\n    \"disconnecting\",\n    \"newListener\",\n    \"removeListener\", // used by the Node.js EventEmitter\n];\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n// see https://stackoverflow.com/questions/8511281/check-if-a-value-is-an-object-in-javascript\nfunction isObject(value) {\n    return Object.prototype.toString.call(value) === \"[object Object]\";\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return isObject(payload);\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || isObject(payload);\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return (Array.isArray(payload) &&\n                    (typeof payload[0] === \"number\" ||\n                        (typeof payload[0] === \"string\" &&\n                            RESERVED_EVENTS.indexOf(payload[0]) === -1)));\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */\n        this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */\n        this._queue = [];\n        /**\n         * A sequence to generate the ID of the {@link QueuedPacket}.\n         * @private\n         */\n        this._queueSeq = 0;\n        this.ids = 0;\n        /**\n         * A map containing acknowledgement handlers.\n         *\n         * The `withError` attribute is used to differentiate handlers that accept an error as first argument:\n         *\n         * - `socket.emit(\"test\", (err, value) => { ... })` with `ackTimeout` option\n         * - `socket.timeout(5000).emit(\"test\", (err, value) => { ... })`\n         * - `const value = await socket.emitWithAck(\"test\")`\n         *\n         * From those that don't:\n         *\n         * - `socket.emit(\"test\", (value) => { ... });`\n         *\n         * In the first case, the handlers will be called with an error when:\n         *\n         * - the timeout is reached\n         * - the socket gets disconnected\n         *\n         * In the second case, the handlers will be simply discarded upon disconnection, since the client will never receive\n         * an acknowledgement from the server.\n         *\n         * @private\n         */\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        const fn = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, args);\n        };\n        fn.withError = true;\n        this.acks[id] = fn;\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        return new Promise((resolve, reject) => {\n            const fn = (arg1, arg2) => {\n                return arg1 ? reject(arg1) : resolve(arg2);\n            };\n            fn.withError = true;\n            args.push(fn);\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */\n    _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") {\n            ack = args.pop();\n        }\n        const packet = {\n            id: this._queueSeq++,\n            tryCount: 0,\n            pending: false,\n            args,\n            flags: Object.assign({ fromQueue: true }, this.flags),\n        };\n        args.push((err, ...responseArgs) => {\n            if (packet !== this._queue[0]) {\n                // the packet has already been acknowledged\n                return;\n            }\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    this._queue.shift();\n                    if (ack) {\n                        ack(err);\n                    }\n                }\n            }\n            else {\n                this._queue.shift();\n                if (ack) {\n                    ack(null, ...responseArgs);\n                }\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @param force - whether to resend a packet that has not been acknowledged yet\n     *\n     * @private\n     */\n    _drainQueue(force = false) {\n        if (!this.connected || this._queue.length === 0) {\n            return;\n        }\n        const packet = this._queue[0];\n        if (packet.pending && !force) {\n            return;\n        }\n        packet.pending = true;\n        packet.tryCount++;\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this._sendConnectPacket(data);\n            });\n        }\n        else {\n            this._sendConnectPacket(this.auth);\n        }\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */\n    _sendConnectPacket(data) {\n        this.packet({\n            type: PacketType.CONNECT,\n            data: this._pid\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\n                : data,\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n        this._clearAcks();\n    }\n    /**\n     * Clears the acknowledgement handlers upon disconnection, since the client will never receive an acknowledgement from\n     * the server.\n     *\n     * @private\n     */\n    _clearAcks() {\n        Object.keys(this.acks).forEach((id) => {\n            const isBuffered = this.sendBuffer.some((packet) => String(packet.id) === id);\n            if (!isBuffered) {\n                // note: handlers that do not accept an error as first argument are ignored here\n                const ack = this.acks[id];\n                delete this.acks[id];\n                if (ack.withError) {\n                    ack.call(this, new Error(\"socket has been disconnected\"));\n                }\n            }\n        });\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    this.onconnect(packet.data.sid, packet.data.pid);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n            this._lastOffset = args[args.length - 1];\n        }\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowledgement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (typeof ack !== \"function\") {\n            return;\n        }\n        delete this.acks[packet.id];\n        // @ts-ignore FIXME ack is incorrectly inferred as 'never'\n        if (ack.withError) {\n            packet.data.unshift(null);\n        }\n        // @ts-ignore\n        ack.apply(this, packet.data);\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id, pid) {\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n        this._drainQueue(true);\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        const onError = (err) => {\n            this.cleanup();\n            this._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                this.maybeReconnectOnOpen();\n            }\n        };\n        // emit `error`\n        const errorSub = on(socket, \"error\", onError);\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                onError(new Error(\"timeout\"));\n                socket.close();\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        else if (this._autoConnect && !socket.active) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n// import { w3cwebsocket as W3CWebSocket } from \"websocket\";\nimport io from \"socket.io-client\";\n\n/**\n * ExampleComponent is an example component.\n * It takes a property, `label`, and\n * displays it.\n * It renders an input with the property `value`\n * which is editable by the user.\n */\nexport default class DashWebsocket extends Component {\n    componentDidMount() {\n        /*\n        const url = this.props.url;\n        const client = new W3CWebSocket(url);\n        client.onopen = () => {\n            console.log('websocket connected');\n        }\n        client.onmessage = (message) => {\n            this.props.setProps({ msg: message.data})\n        }*/\n\n        if (window.fin) {\n            console.log('OpenFin found');\n\n        }\n        else{\n            console.log('OpenFin not found')\n        }\n\n        if (window.fdc3 !== undefined) {\n            console.log('Not undefined');\n            this.setupListeners();\n        } else {\n            console.log('undefined');\n            window.addEventListener('fdc3Ready', async () => {\n                \n                this.setupListeners();\n            });\n        }\n\n       // const socket = io.connect(this.props.url, { transports: [\"websocket\", \"polling\"], upgrade: false});\n       // socket.on(\"receive_message\", (data) => {\n       //     alert(data.message);\n       //     this.props.setProps({ msg: data.message.data})\n       //   });\n\n    }\n\n    /**\n     * Sets up the related fdc3 listeners once fdc3 is available.\n     */\n    setupListeners() {\n        try {\n            console.log('Setting up listeners');\n            window.fdc3.addContextListener(this.contextHandler);\n            // window.fdc3.addIntentListener('ViewContact', contextHandler);\n            // window.fdc3.addIntentListener('ViewProfile', contextHandler);\n        } catch (error) {\n            console.error('There was an error while setting up all of the fdc3 listeners', error);\n        }\n    }\n\n    /**\n     * Handler for setting the context.\n     * @param ctx The FDC3 context.\n     */\n    contextHandler(ctx) {\n        console.log('Context Received:', ctx);\n        if (ctx.type === 'fdc3.contact') {\n            // setContact(ctx);\n        }\n    }\n\n\n    render() {\n        const {id, setProps, url, msg} = this.props;\n\n        return (\n            <div id={id}>\n                <table>\n                    <tbody>\n                        <tr><td>url</td><td><input defaultValue={url}/></td></tr>\n                        <tr><td>msg</td><td><textarea defaultValue={msg}/></td></tr>\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nDashWebsocket.defaultProps = {};\n\nDashWebsocket.propTypes = {\n    /**\n     * The ID used to identify this component in Dash callbacks.\n     */\n    id: PropTypes.string,\n\n    /**\n     * The websocket response message.\n     */\n    msg: PropTypes.string,\n\n    /**\n     * The url for websocket.\n     */    \n    url: PropTypes.string,\n\n    /**\n     * Dash-assigned callback that should be called to report property changes\n     * to Dash, to make them available for callbacks.\n     */\n    setProps: PropTypes.func\n};\n"],"names":["url","__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","getCurrentScript","script","document","currentScript","doc_scripts","getElementsByTagName","scripts","i","length","push","filter","s","async","text","textContent","slice","src","split","join","jsonpScriptSrc","__jsonpScriptSrc__","chunkId","isLocal","test","srcFragments","fileFragments","splice","window","PACKET_TYPES","create","PACKET_TYPES_REVERSE","keys","forEach","ERROR_PACKET","type","data","withNativeBlob","Blob","toString","withNativeArrayBuffer","ArrayBuffer","isView","buffer","encodePacket","supportsBinary","callback","encodeBlobAsBase64","fileReader","FileReader","onload","content","result","readAsDataURL","toArray","Uint8Array","byteOffset","byteLength","TEXT_ENCODER","lookup","chars","charCodeAt","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","p","arraybuffer","bytes","decode","SEPARATOR","String","fromCharCode","TEXT_DECODER","totalLength","chunks","reduce","acc","chunk","concatChunks","size","shift","j","Emitter","mixin","on","addEventListener","event","fn","this","_callbacks","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","cb","callbacks","emit","args","Array","emitReserved","listeners","hasListeners","globalThisShim","self","Function","pick","attr","k","NATIVE_SET_TIMEOUT","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","setTimeoutFn","bind","clearTimeoutFn","TransportError","Error","constructor","reason","description","context","super","Transport","writable","query","socket","onError","open","readyState","doOpen","close","doClose","onClose","send","packets","write","onOpen","onData","packet","onPacket","details","pause","onPause","createUri","schema","_hostname","_port","path","_query","hostname","indexOf","port","secure","Number","encodedQuery","str","encodeURIComponent","alphabet","map","prev","seed","num","encoded","Math","floor","yeast","now","Date","XMLHttpRequest","err","hasCORS","XHR","xdomain","e","concat","empty","hasXHR2","responseType","Request","uri","method","undefined","_a","xd","xhr","extraHeaders","setDisableHeaderCheck","setRequestHeader","cookieJar","addCookies","withCredentials","requestTimeout","timeout","onreadystatechange","parseCookies","status","onLoad","index","requestsCount","requests","cleanup","fromError","abort","responseText","unloadHandler","attachEvent","nextTick","Promise","resolve","then","WebSocket","MozWebSocket","isReactNative","navigator","product","toLowerCase","transports","websocket","forceBase64","name","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","timestampRequests","timestampParam","b64","webtransport","WebTransport","transport","transportOptions","closed","catch","ready","createBidirectionalStream","stream","decoderStream","maxPayload","TextDecoder","state","expectedLength","isBinary","TransformStream","transform","controller","header","headerArray","DataView","getUint16","view","n","getUint32","pow","enqueue","createPacketDecoderStream","MAX_SAFE_INTEGER","reader","readable","pipeThrough","getReader","encoderStream","arrayBuffer","TextEncoder","encode","encodePacketToBinary","payloadLength","setUint8","setUint16","setBigUint64","BigInt","pipeTo","writer","getWriter","read","done","sid","polling","location","isSSL","protocol","createCookieJar","poll","total","doPoll","encodedPayload","encodedPackets","decodedPacket","decodePayload","count","encodePayload","doWrite","request","assign","req","xhrStatus","pollXhr","re","parts","parse","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","names","queryKey","$0","$1","$2","Socket","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","addTrailingSlash","rejectUnauthorized","perMessageDeflate","threshold","closeOnBeforeunload","qs","qry","pairs","l","pair","decodeURIComponent","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","beforeunloadEventListener","offlineEventListener","createTransport","EIO","priorWebsocketSuccess","setTransport","onDrain","probe","failed","onTransportOpen","msg","upgrading","flush","freezeTransport","error","onTransportClose","onupgrade","to","resetPingTimeout","onHandshake","JSON","sendPacket","code","filterUpgrades","getWritablePackets","payloadSize","c","utf8Length","ceil","options","compress","cleanupAndClose","waitForUpgrade","filteredUpgrades","withNativeFile","File","hasBinary","toJSON","isArray","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","newData","reconstructPacket","_reconstructPacket","RESERVED_EVENTS","PacketType","Encoder","replacer","EVENT","ACK","encodeAsString","encodeAsBinary","BINARY_EVENT","BINARY_ACK","nsp","stringify","deconstruction","unshift","isObject","Decoder","reviver","add","reconstructor","decodeString","isBinaryEvent","BinaryReconstructor","takeBinaryData","start","buf","next","payload","tryParse","substr","isPayloadValid","CONNECT","DISCONNECT","CONNECT_ERROR","destroy","finishedReconstruction","reconPack","binData","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","recovered","receiveBuffer","sendBuffer","_queue","_queueSeq","ids","acks","flags","auth","_opts","_autoConnect","disconnected","subEvents","subs","onpacket","active","_readyState","retries","fromQueue","volatile","_addToQueue","ack","pop","_registerAckCallback","isTransportWritable","engine","notifyOutgoingListeners","ackTimeout","timer","withError","emitWithAck","reject","arg1","arg2","tryCount","pending","responseArgs","_drainQueue","force","_packet","_sendConnectPacket","_pid","pid","offset","_lastOffset","_clearAcks","some","onconnect","onevent","onack","ondisconnect","message","emitEvent","_anyListeners","listener","sent","emitBuffered","subDestroy","onAny","prependAny","offAny","listenersAny","onAnyOutgoing","_anyOutgoingListeners","prependAnyOutgoing","offAnyOutgoing","listenersAnyOutgoing","Backoff","ms","min","max","factor","jitter","attempts","duration","rand","random","deviation","reset","setMin","setMax","setJitter","Manager","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","decoder","autoConnect","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","_reconnecting","reconnect","skipReconnect","openSubDestroy","errorSub","onping","ondata","ondecoded","_destroy","_close","delay","onreconnect","attempt","cache","parsed","loc","href","sameNamespace","forceNew","multiplex","_regeneratorRuntime","t","r","iterator","asyncIterator","u","define","configurable","wrap","Generator","Context","makeInvokeMethod","tryCatch","arg","h","f","y","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","values","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","_typeof","__await","callInvokeWithMethodAndArg","delegate","maybeInvokeDelegate","_sent","dispatchException","abrupt","TypeError","resultName","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","isNaN","displayName","isGeneratorFunction","mark","setPrototypeOf","__proto__","awrap","reverse","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","gen","_next","_throw","info","_asyncToGenerator","_defineProperties","target","props","descriptor","_toPropertyKey","toPrimitive","_toPrimitive","_callSuper","_getPrototypeOf","ReferenceError","_assertThisInitialized","_possibleConstructorReturn","_isNativeReflectConstruct","Reflect","construct","Boolean","valueOf","_setPrototypeOf","DashWebsocket","_Component","instance","Constructor","_classCallCheck","subClass","superClass","_inherits","protoProps","_this","fin","console","log","fdc3","setupListeners","_callee","_context","addContextListener","contextHandler","ctx","_this$props","setProps","React","defaultValue","Component","defaultProps","propTypes","PropTypes"],"sourceRoot":""}